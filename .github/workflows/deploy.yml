---
name: CI-CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  S3_BUCKET_NAME: wingle-ci-bucket
  CODE_DEPLOY_APPLICATION_NAME: wingle-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: wingle-codedeploy-group
jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: "17"
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*',
            '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: make application.yml
        if: contains(github.ref, 'develop')
        run: |
          sudo mkdir -p ./src/main/resources
          sudo chmod 777 ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          # GitHub-Actions에서 설정한 값을 application.yml 파일에 쓰기
          echo "${{ secrets.PROPERTIES }}" > ./application.yml 
        shell: bash
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew clean build
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_---
name: CI-CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  S3_BUCKET_NAME: wingle-ci-bucket
  CODE_DEPLOY_APPLICATION_NAME: wingle-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: wingle-codedeploy-group
jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: "17"
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*',
            '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: make application.yml
        if: contains(github.ref, 'develop')
        run: |
          sudo mkdir -p ./src/main/resources
          sudo chmod 777 ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          # GitHub-Actions에서 설정한 값을 application.yml 파일에 쓰기
          echo "${{ secrets.PROPERTIES }}" > ./application.yml 
        shell: bash
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew clean build
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Upload to AWS S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/build/$GITHUB_SHA.zip \
            --source .
      - name: Deploy to AWS EC2 from S3
        run: >
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=build/$GITHUB_SHA.zip,bundleType=zip
DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://$S3_BUCKET_NAME/build/$GITHUB_SHA.zip \
            --source .
      - name: Deploy to AWS EC2 from S3
        run: >
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=build/$GITHUB_SHA.zip,bundleType=zip
